{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red53\green53\blue53;}
{\*\expandedcolortbl;;\cssrgb\c27059\c27059\c27059;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf2 Se ha decidido tratar de montar un proyecto que sea lo m\'e1s reusable, testable y escalable posible. Para ello se ha usado el patr\'f3n MVP de forma que:\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl0\cf2 	- La vista se encarga \'fanicamente de pintar la informaci\'f3n\
\ls1\ilvl0	- El presenter interact\'faa entre la vista y el modelo dependiendo de los casos de uso\
\ls1\ilvl0	- Las peticiones se hacen independientemente de la vista, de forma que si quisi\'e9ramos usar otra librer\'eda bastar\'eda con cambiar la implementaci\'f3n.\
\ls1\ilvl0	- Para el tratamiento de voz se ha tratado de usar Wit pero se ha visto que para versiones Android > 6 hay un problema. Se ha encontrado la soluci\'f3n pero debido a la falta de tiempo no ha sido integrada. Habr\'eda que compilar la librer\'eda de nuevo.\
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 \
En cuanto a las peticiones:\
\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls2\ilvl0\cf2 {\listtext	1.	}Usamos un patr\'f3n repositorio el cual se encarga de ver de donde obtener los datos. En este caso solo usaremos remoto, pero podr\'eda darse el caso de que se quisiera cachear la info y usando este patr\'f3n bastar\'eda con implementar como almacenar la info (SQLite, realm\'85)\
\ls2\ilvl0{\listtext	2.	}Lo ideal hubiera sido que cada capa tuviera su propio modelo de datos, parseandolos entre capas de forma que independientemente de la API que usaremos no hubiera que tocar c\'f3digo de interfaz. Para este caso hemos usado un modelo \'fanico.\
}